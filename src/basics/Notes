For Printing row number in patterns we use outerloop variable for .eg = i
1111
2222
3333

For Printing col number in patterns we use outerloop variable for e.g = j
1234
1234
1234

For Printing col number in patterns we use outerloop variable for decreasing  e.g = n+1 -j

4321
4321
4321

For Printing row number in patterns we use outerloop variable for decreasing  e.g = n+1-i

4444
3333
2222

 for triangle pattern for ascending means increase with row num then
 then inner condition
here initialize j = 1
 j<=i

 1
 12
 123
 1234

for triangle pattern for descending means decrease with row num then
then inner condition
here initialize j = i
j<=n

1234
123
12
1

store character = char abc = 'A' and to check char At.index(0)

calculate power:
10^8
Math.pow(10,8)

check the variable is lower or uppercase

Character.isUpperCase

for increasing count row wise we can use counter vriable = i (outer loop variable) as we can every row start with row number
1234
2345
3456
4567
or
1
23
345
4567

// string to integer
String s =String.valueOf();

// integer to string
int i = Integer.ParseInt(s)

//Scanner
 sc = sc.next() // prints one word of string
 sc.nextLine() // prints whole String

 // sc.hasNext() // check the count given by user
 for e.g n given by use = 4
 sc.hasNext() will check till 4

//bitwise operator
(2&3) AND
(2&3) OR
(2^3) XOR
(2~3) NOT

// leftside shift
7<< left shift  by  1
so in binary the first bit from left side will get removed and 0 will be added in extreme right side

// Rightside shift
7>> right shift  by  1
so in binary the first bit from right  side will get removed and if the number is -ve 1 will be added in left and if it
is +ve 0 will be added

post increment a++; first print the value then increase
pre increment ++a;   first increase then assign value to a

post decrement a--;  first print the value then decrease
pre decrement --a;   first decrease then assign value to a

//break - it will break the loop where break is mentioned
// continue - it will stop that loop and the entire code that is present below and the loop will start with the new number

array syntax
int arr[] = new int[10]

array index start from and last index = 9 as the number is 10
// to read
arr[3]
array can be of
char carr[] = new char[10] - initilaized carr[0] = null , and for writing carr[1] = 'a';
double darr[] = new double[10] - initilaized darr[0] = 0.0

 boolean arr[] = new boolean[5];
 System.out.println(arr[0]);
 ans = false

//pass by value
java is always pass by value
bcoz same variable name in different functions are always different not same
so one may contain 10 and another one may contain 11

//java basically has 2 types prmitive and nonprimitive
primitive are - int , char , double , boolean
non primitive are - Scanner, array ,

// garbage collector in java periodically and cleans every non used memories








